From 923ed37b583ad9f78ca36e0bb372e2d397a900af Mon Sep 17 00:00:00 2001
From: Andre Przywara <andre.przywara@arm.com>
Date: Tue, 12 Jul 2016 22:41:52 +0100
Subject: [PATCH] sunxi: add smc service handler for an SMC mailbox

The SCPI protocol uses a combination of a shared memory region and a
mailbox to signal requests from the application cores to the management
processor. However the Allwinner mailbox device in the A64 SoC can only
signal requests between the ARM cores and the OpenRISC core, not between
the ARM cores themselves.
As an alternative we can directly trigger SCPI requests by using an
smc instruction to call routines in the runtime code of ARM Trusted
Firmware (similar to what PSCI does).
Add a vendor defined (SiP) runtime service handler, which dispatches
incoming smc calls to the SCPI handler if the function ID matches.

Signed-off-by: Andre Przywara <andre.przywara@arm.com>
---
 plat/sun50iw1p1/bl31_sunxi_setup.c |   2 +
 plat/sun50iw1p1/platform.mk        |   1 +
 plat/sun50iw1p1/sunxi_sip_svc.c    | 123 +++++++++++++++++++++++++++++++++++++
 plat/sun50iw1p1/sunxi_sip_svc.h    |  53 ++++++++++++++++
 4 files changed, 179 insertions(+)
 create mode 100644 plat/sun50iw1p1/sunxi_sip_svc.c
 create mode 100644 plat/sun50iw1p1/sunxi_sip_svc.h

diff --git a/plat/sun50iw1p1/bl31_sunxi_setup.c b/plat/sun50iw1p1/bl31_sunxi_setup.c
index 3e30814ff..5e71cc589 100644
--- a/plat/sun50iw1p1/bl31_sunxi_setup.c
+++ b/plat/sun50iw1p1/bl31_sunxi_setup.c
@@ -255,6 +255,8 @@ void bl31_platform_setup(void)
 	}
 
 	sunxi_setup_clocks(socid);
+
+	NOTICE("SCPI: installed handler, implementation level: 000000\n");
 }
 
 /*******************************************************************************
diff --git a/plat/sun50iw1p1/platform.mk b/plat/sun50iw1p1/platform.mk
index b788f81f2..482b11567 100644
--- a/plat/sun50iw1p1/platform.mk
+++ b/plat/sun50iw1p1/platform.mk
@@ -50,5 +50,6 @@ BL31_SOURCES		+=	drivers/arm/gic/arm_gic.c		\
 				plat/sun50iw1p1/plat_topology.c		\
 				plat/sun50iw1p1/aarch64/plat_helpers.S	\
 				plat/sun50iw1p1/sunxi_clocks.c		\
+				plat/sun50iw1p1/sunxi_sip_svc.c		\
 				plat/sun50iw1p1/aarch64/sunxi_common.c
 
diff --git a/plat/sun50iw1p1/sunxi_sip_svc.c b/plat/sun50iw1p1/sunxi_sip_svc.c
new file mode 100644
index 000000000..827aa70eb
--- /dev/null
+++ b/plat/sun50iw1p1/sunxi_sip_svc.c
@@ -0,0 +1,123 @@
+/*
+ * Copyright (c) 2016,2017 ARM Limited and Contributors. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * Redistributions of source code must retain the above copyright notice, this
+ * list of conditions and the following disclaimer.
+ *
+ * Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * Neither the name of ARM nor the names of its contributors may be used
+ * to endorse or promote products derived from this software without specific
+ * prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+#include <assert.h>
+#include <console.h>
+#include <debug.h>
+#include <mmio.h>
+#include "sunxi_sip_svc.h"
+#include "sunxi_private.h"
+#include <runtime_svc.h>
+#include <uuid.h>
+
+/* SiP Service UUID */
+DEFINE_SVC_UUID(sunxi_sip_svc_uid,
+		0x06016e09, 0xd859, 0x4c24, 0xbb, 0x9d,
+		0x18, 0x92, 0xb4, 0x8d, 0xa5, 0x03);
+
+#pragma weak sunxi_plat_sip_handler
+uint64_t sunxi_plat_sip_handler(uint32_t smc_fid,
+				uint64_t x1,
+				uint64_t x2,
+				uint64_t x3,
+				uint64_t x4,
+				void *cookie,
+				void *handle,
+				uint64_t flags)
+{
+	ERROR("%s: unhandled SMC (0x%x)\n", __func__, smc_fid);
+	SMC_RET1(handle, SMC_UNK);
+}
+
+/*
+ * This function handles Allwinner defined SiP Calls */
+uint64_t sunxi_sip_handler(uint32_t smc_fid,
+			uint64_t x1,
+			uint64_t x2,
+			uint64_t x3,
+			uint64_t x4,
+			void *cookie,
+			void *handle,
+			uint64_t flags)
+{
+	/* Determine which security state this SMC originated from */
+	if (!is_caller_non_secure(flags))
+		SMC_RET1(handle, SMC_UNK);
+
+	/* SiP SMC service normal world's call */
+	switch (smc_fid) {
+	case SUNXI_SIP_MBOX_TRIGGER:
+		SMC_RET1(handle, ~0);
+	}
+
+	return sunxi_plat_sip_handler(smc_fid, x1, x2, x3, x4,
+					cookie, handle, flags);
+}
+
+/*
+ * This function is responsible for handling all SiP calls from the NS world
+ */
+uint64_t sip_smc_handler(uint32_t smc_fid,
+			 uint64_t x1,
+			 uint64_t x2,
+			 uint64_t x3,
+			 uint64_t x4,
+			 void *cookie,
+			 void *handle,
+			 uint64_t flags)
+{
+	switch (smc_fid) {
+	case SIP_SVC_CALL_COUNT:
+		/* Return the number of Allwinner SiP Service Calls. */
+		SMC_RET1(handle, SUNXI_COMMON_SIP_NUM_CALLS);
+
+	case SIP_SVC_UID:
+		/* Return UID to the caller */
+		SMC_UUID_RET(handle, sunxi_sip_svc_uid);
+
+	case SIP_SVC_VERSION:
+		/* Return the version of current implementation */
+		SMC_RET2(handle, SUNXI_SIP_SVC_VERSION_MAJOR,
+			 SUNXI_SIP_SVC_VERSION_MINOR);
+
+	default:
+		return sunxi_sip_handler(smc_fid, x1, x2, x3, x4,
+			cookie, handle, flags);
+	}
+}
+
+/* Define a runtime service descriptor for fast SMC calls */
+DECLARE_RT_SVC(
+	sunxi_sip_svc,
+	OEN_SIP_START,
+	OEN_SIP_END,
+	SMC_TYPE_FAST,
+	NULL,
+	sip_smc_handler
+);
diff --git a/plat/sun50iw1p1/sunxi_sip_svc.h b/plat/sun50iw1p1/sunxi_sip_svc.h
new file mode 100644
index 000000000..08d52bd7b
--- /dev/null
+++ b/plat/sun50iw1p1/sunxi_sip_svc.h
@@ -0,0 +1,53 @@
+/*
+ * Copyright (c) 2016,2017 ARM Limited and Contributors. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *
+ * Redistributions of source code must retain the above copyright notice, this
+ * list of conditions and the following disclaimer.
+ *
+ * Redistributions in binary form must reproduce the above copyright notice,
+ * this list of conditions and the following disclaimer in the documentation
+ * and/or other materials provided with the distribution.
+ *
+ * Neither the name of ARM nor the names of its contributors may be used
+ * to endorse or promote products derived from this software without specific
+ * prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+ * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
+ * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef __PLAT_SIP_SVC_H__
+#define __PLAT_SIP_SVC_H__
+
+#include <stdint.h>
+
+/* SMC function IDs for SiP Service queries */
+#define SIP_SVC_CALL_COUNT		0x8200ff00
+#define SIP_SVC_UID			0x8200ff01
+/*					0x8200ff02 is reserved */
+#define SIP_SVC_VERSION			0x8200ff03
+
+/* Allwinner SiP Service Calls version numbers */
+#define SUNXI_SIP_SVC_VERSION_MAJOR	0x0
+#define SUNXI_SIP_SVC_VERSION_MINOR	0x1
+
+#define SMC_AARCH64_BIT			0x40000000
+
+/* Number of Allwinner SiP Calls implemented */
+#define SUNXI_COMMON_SIP_NUM_CALLS	1
+
+/* Allwinner SiP Service Calls function IDs */
+#define SUNXI_SIP_MBOX_TRIGGER		0x82000001
+
+#endif /* __PLAT_SIP_SVC_H__ */
